replicaCount: 1

image:
  repository: 3ayazaya/redguard
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "24.06.18"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: LoadBalancer
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
    - name: https
      port: 443
      targetPort: 443
      protocol: TCP

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


#livenessProbe:
#  httpGet:
#    path: /
#    port: http
#  initialDelaySeconds: 5
#  periodSeconds: 3

#readinessProbe:
#  httpGet:
#    path: /
#    port: http
#  initialDelaySeconds: 5
#  periodSeconds: 3

# Additional volumes on the output Deployment definition.
volumes:
  - name: redguard
    configMap:
     name: redguard-configmap
#volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: redguard
    mountPath: /app/redGuard.ini
    subPath: redGuard.ini
#volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

redGuardConfig: |
  [cert]
  # User Optional name
  DNSName=*.aliyun.com,manager.channel.aliyun.com,*.acs-internal.aliyuncs.com",*.connect.aliyun.com,aliyun.com,whois.www.net.cn,tianchi-global.com
  # Cert User CommonName
  CommonName=*.aliyun.com
  # Cert User Locality
  Locality=HangZhou
  # Cert User Organization
  Organization=Alibaba (China) Technology Co., Ltd.
  # Cert User Country
  Country=CN
  # Whether to use the certificate you have applied for true/false
  HasCert      = true
  [proxy]
  # key   : Header Host value of the reverse proxy
  # value : The actual address forwarded by the reverse proxy
  HostTarget    = {"360.net":"http://127.0.0.1:8080","360.com":"https://127.0.0.1:4433"}
  # HTTPS Reverse proxy port
  Port_HTTPS    = :443
  # HTTP Reverse proxy port
  Port_HTTP     = :80
  # RedGuard interception action: redirect / reset / proxy (Hijack HTTP Response)
  drop_action   = redirect
  # URL to redirect to
  Redirect      = https://yandex.ru/video/preview/13134122948982539093
  # IP address owning restrictions example:AllowLocation = 山东,上海,杭州 or shanghai,beijing
  AllowLocation = *
  # Whitelist list example: AllowIP = 172.16.1.1,192.168.1.1
  AllowIP       = *
  # Limit the  time of requests example: AllowTime = 8:00 - 16:00
  AllowTime     = *
  # C2 Malleable File Path
  MalleableFile = *
  # Edge Host Communication Domain
  EdgeHost      = *
  # Edge Host Proxy Target example: EdgeTarget = 360.com
  EdgeTarget    = *
  # Customize the header to be deleted example: Keep-Alive,Transfer-Encoding
  DelHeader     = *
  
  [SampleFinger]
  # HTTP Request Header Field
  FieldName   = *
  # Sample Finger example:xxxxxx,xxxxxx
  FieldFinger = *